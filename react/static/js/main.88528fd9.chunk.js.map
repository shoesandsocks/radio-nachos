{"version":3,"sources":["helpers/ErrorBoundary.js","App.js","helpers/handleLookup.js","helpers/makePrevPlaylists.js","helpers/renderFormLine.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","props","state","error","errorInfo","this","setState","style","whiteSpace","toString","componentStack","href","children","React","Component","App","useState","numberOfTracks","setNumberOfTracks","submission","setSubmission","playlists","compositions","recentPlaylists","prevs","setPrevs","globalError","setGlobalError","isCreating","setIsCreating","useEffect","fetch","then","x","json","catch","e","window","location","replace","displayError","msg","setTimeout","handleInputChange","target","name","value","match","num","newSub","str","method","headers","body","JSON","stringify","r","handleLookup","addFormLine","push","removeFormLine","filter","_","index","Number","calcTotal","reduce","acc","curr","className","id","length","populateForm","composition","parse","dataset","tracks","map","comp","playlistId","percentage","playlistName","scrollTo","top","left","behavior","deletePlaylist","idToDelete","console","log","reload","pL","timestring","split","timestamp","Date","image","images","url","displayDate","toLocaleTimeString","toLocaleDateString","weekday","year","month","day","undefined","compositionData","key","src","alt","onClick","compo","data-composition","data-tracks","er","makePrevPlaylists","array","isLast","isOnly","htmlFor","type","data-lpignore","required","placeholder","onChange","min","max","step","renderFormLine","preventDefault","s","includes","arrayOfArrays","listId","URL","origin","disabled","xmlns","width","height","viewBox","fill","d","entry","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.88528fd9.chunk.js","sourcesContent":["import React from \"react\";\n\n// lifted straight from Dan A.\n// https://codepen.io/gaearon/pen/wqvxGa?editors=0010\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n          <p>\n            Try logging in again. If there's a \"blank\" radio-nachos playlist in\n            your Spotify, delete it.\n          </p>\n          <a href=\"/\">Go back.</a>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { useEffect, useState } from \"react\";\n\nimport renderFormLine from \"./helpers/renderFormLine\";\nimport makePrevPlaylists from \"./helpers/makePrevPlaylists\";\nimport handleLookup from \"./helpers/handleLookup\";\nimport ErrorBoundary from \"./helpers/ErrorBoundary\";\n\nconst spinner = () => (\n  <svg\n    id=\"spinner\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"#ffffff\"\n  >\n    <path d=\"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\" />\n  </svg>\n);\n\nfunction App() {\n  const [numberOfTracks, setNumberOfTracks] = useState(20);\n  const [submission, setSubmission] = useState([[\"\", 100, \"\"]]); // id, %age, name (generated by func)\n  const [prevs, setPrevs] = useState({\n    playlists: [],\n    compositions: [],\n    recentPlaylists: [],\n  });\n  const [globalError, setGlobalError] = useState(\"\");\n  const [isCreating, setIsCreating] = useState(false);\n\n  useEffect(() => {\n    fetch(\"/getPrev\")\n      .then((x) => x.json())\n      .then((json) => setPrevs(json))\n      .catch((e) => {\n        window.location.replace(\"/\");\n      });\n  }, []);\n\n  const displayError = (msg) => {\n    setIsCreating(false);\n    setTimeout(() => setGlobalError(\"\"), 7000);\n    return setGlobalError(msg);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"tracks\") setNumberOfTracks(value);\n    if (name.match(/^playlist/)) {\n      const num = name.replace(\"playlist\", \"\").toString();\n      const newSub = [...submission];\n      newSub[num][0] = value;\n      // setSubmission(newSub);\n      if (value.match(/^spotify:playlist:[a-zA-Z0-9]{22}$/)) {\n        handleLookup(value, num, submission, setSubmission, displayError);\n      } else {\n        newSub[num][2] = \"\";\n        setSubmission(newSub);\n      }\n      return;\n    }\n    if (name.match(/^percent/)) {\n      const num = name.replace(\"percent\", \"\").toString();\n      const newSub = [...submission];\n      newSub[num][1] = value;\n      setSubmission(newSub);\n    }\n  };\n  const addFormLine = (e) => {\n    const newSub = [...submission];\n    newSub.push([\"\", 0]);\n    setSubmission(newSub);\n  };\n  const removeFormLine = (e) => {\n    const newSub = submission.filter(\n      (_, index) => index !== Number(e.target.value)\n    );\n    setSubmission(newSub);\n  };\n\n  const calcTotal = (submission) =>\n    submission.reduce((acc, curr) => acc + Number(curr[1]), 0);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsCreating(true);\n    if (calcTotal(submission) !== 100) {\n      return displayError(\"C'mon. That's not 100%, Brad.\");\n    }\n    const sizes = submission.filter((s) => s.length !== 3);\n    if (sizes.length > 0) return displayError(\"You missed a playlist, there.\");\n    const allPlaylistNames = submission.map((s) => s[2]);\n    if (allPlaylistNames.includes(\"\"))\n      return displayError(\"Missing a valid playlist there?\");\n\n    fetch(\"/make\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        arrayOfArrays: submission,\n        numberOfTracks,\n      }),\n    })\n      .then((r) => r.json())\n      .then((json) => {\n        const { listId, timestamp, error } = json;\n        if (error) {\n          return displayError(error);\n        }\n        const url = new URL(window.location.href);\n        return (window.location.href = `${url.origin}/radio?listId=${listId}&timestamp=${timestamp}`);\n      })\n      .catch((e) => {\n        console.log(e);\n        return displayError(\"Serious failure; sorry.\");\n      });\n  };\n\n  return (\n    <ErrorBoundary>\n      <div className=\"App\">\n        <h1>radio nachos playmaker</h1>\n        <div className=\"sidebar\">\n          <h2>Your playlists</h2>\n          <ul id=\"previous\">\n            {!prevs.playlists.length && (\n              <li>\n                <p id=\"nope\">you have no previous playlists</p>\n              </li>\n            )}\n            {makePrevPlaylists(\n              prevs,\n              setSubmission,\n              setNumberOfTracks,\n              displayError\n            )}\n          </ul>\n        </div>\n        <div className=\"primary\">\n          <form id=\"creator-form\">\n            <fieldset id=\"fieldset\">\n              <div id=\"all-entries\">\n                {submission.map((array, index) =>\n                  renderFormLine(\n                    index,\n                    array,\n                    handleInputChange,\n                    addFormLine,\n                    removeFormLine,\n                    index === submission.length - 1,\n                    submission.length === 1\n                  )\n                )}\n              </div>\n              <p id=\"total\">{calcTotal(submission)}</p>\n              <p id=\"currentVal\">{numberOfTracks}</p>\n\n              <label htmlFor=\"tracks\">how many tracks? (10 - 99)</label>\n              <br />\n              <input\n                type=\"range\"\n                id=\"tracks-input\"\n                name=\"tracks\"\n                value={numberOfTracks}\n                min=\"10\"\n                max=\"99\"\n                step=\"1\"\n                onChange={handleInputChange}\n              />\n              <br />\n              <div id=\"count-and-button\">\n                <span id=\"global-error\">{globalError}</span>\n                <button\n                  id=\"submit-btn\"\n                  type=\"submit\"\n                  onClick={handleSubmit}\n                  disabled={isCreating}\n                >\n                  {isCreating ? <span>{spinner()}</span> : \"create playlist\"}\n                </button>\n              </div>\n            </fieldset>\n          </form>\n          <h2>Recently used playlists</h2>\n          <ul id=\"recent-list\">\n            {prevs.recentPlaylists.map((entry) => (\n              <div className=\"recent-wrap\">\n                <p className=\"recent-name\">\n                  <a href={entry.playlistId}>{entry.playlistName}</a>\n                </p>\n                <p className=\"recent-id\">{entry.playlistId}</p>\n              </div>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","export default (str, num, submission, setSubmission, displayError) => {\n  fetch(\"/playlistlookup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ str }),\n  })\n    .then((r) => r.json())\n    .then(({ error, name }) => {\n      displayError(error);\n      const newSub = [...submission];\n      newSub[num][2] = name ? name : \"\";\n      return setSubmission(newSub);\n    })\n    .catch((e) => displayError(\"Lookup failed. Are you logged in?\"));\n};\n","import React from \"react\";\n\nexport default (prevs, setSubmission, setNumberOfTracks, displayError) => {\n  const populateForm = (e) => {\n    const composition = JSON.parse(e.target.dataset.composition);\n    const { tracks } = e.target.dataset;\n    const newSub = composition.map((comp) => [\n      comp.playlistId,\n      comp.percentage,\n      comp.playlistName,\n    ]);\n    setSubmission(newSub);\n    setNumberOfTracks(tracks);\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n  const deletePlaylist = (e) => {\n    const { id } = e.target;\n    const idToDelete = id.replace(\"playlist-\", \"\");\n    fetch(\"/deletePlaylist\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ idToDelete }),\n    })\n      .then((r) => r.json())\n      .then((json) => {\n        console.log(json);\n        if (json.error) {\n          return displayError(json.error);\n        }\n        return window.location.reload();\n      })\n      .catch(() => window.location.replace(\"/\"));\n  };\n\n  try {\n    const { playlists, compositions } = prevs;\n    return playlists.map((pL) => {\n      const { id } = pL;\n      const timestring = +pL.name.split(\"-\")[2]; // the part after radio-nachos-\n      const timestamp = new Date(timestring);\n      let image = \"https://www.porknachos.com/files/naviavi.jpg\";\n      if (pL.images && pL.images.length > 1) {\n        image = pL.images[1].url;\n      }\n\n      const composition = compositions.filter(\n        (comp) => comp.timestamp === timestring.toString()\n      )[0];\n      const options = {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      };\n      const displayDate = `${timestamp.toLocaleTimeString()}, ${timestamp.toLocaleDateString(\n        \"en-US\",\n        options\n      )}`;\n      if (composition !== undefined) {\n        const { compositionData, numberOfTracks } = composition;\n        if (!numberOfTracks || numberOfTracks < 1) {\n          return (\n            <li key={id} className=\"playlist-entry-wrap\">\n              <a href={`/radio?timestamp=${timestring}&listId=${id}`}>\n                <img src={image} alt=\"playlist graphic from spotify\" />\n                <p>An empty playlist</p>\n              </a>\n              <div className=\"playlist-buttons\">\n                <div>&nbsp;</div>\n                <button\n                  onClick={deletePlaylist}\n                  className=\"delete-playlist-btn\"\n                  id={`playlist-${id}`}\n                >\n                  delete this playlist\n                </button>\n              </div>\n              `\n            </li>\n          );\n        }\n        return (\n          <li key={id} className=\"playlist-entry-wrap\">\n            <a href={`/radio?timestamp=${timestring}&listId=${id}`}>\n              <img src={image} alt=\"playlist graphic from spotify\" />\n              <p>\n                {displayDate} - {numberOfTracks} songs\n              </p>\n            </a>\n            {compositionData.map((compo) => (\n              <p key={compo.playlistId} className=\"one-playlist-line\">\n                {compo.playlistName} ({compo.playlistId})\n                <span>{compo.percentage}%</span>\n              </p>\n            ))}\n            <div className=\"playlist-buttons\">\n              <button\n                className=\"make-another-btn\"\n                data-composition={JSON.stringify(compositionData)}\n                data-tracks={numberOfTracks}\n                onClick={populateForm}\n              >\n                Set up a similar playlist\n              </button>\n              <button\n                onClick={deletePlaylist}\n                className=\"delete-playlist-btn\"\n                id={`playlist-${id}`}\n              >\n                delete this playlist\n              </button>\n            </div>\n            `\n          </li>\n        );\n      } else {\n        return (\n          <li className=\"playlist-entry-wrap\">\n            <a href={`/radio?timestamp=${timestring}&listId=${id}`}>\n              <img\n                src={`${pL.images[1].url}`}\n                alt=\"playlist graphic from spotify\"\n              />\n              <p>${displayDate}</p>\n            </a>\n          </li>\n        );\n      }\n    });\n  } catch (er) {\n    console.log(er, \"error mapping playlists\");\n    return (\n      <p>\n        Something failed catastrophically. If you have a blank radio-nachos\n        playlist in your Spotify account, delete it and reload. Otherwise,\n        <a href=\"/\">try logging in again.</a> You might need to message me.\n      </p>\n    );\n  }\n};\n","import React from \"react\";\n\nexport default function (\n  num,\n  array,\n  handleInputChange,\n  addFormLine,\n  removeFormLine,\n  isLast = false,\n  isOnly = true\n) {\n  // console.log(num, array);\n  return (\n    <div key={num}>\n      <div className=\"above-entry-wrap\">\n        <p className=\"label-spacer\"></p>\n        <p className=\"playlist-name-lookup\" id=\"playlist1-name-lookup\">\n          {array[2]}\n        </p>\n      </div>\n      <div className=\"one-entry-wrap\">\n        <label htmlFor={`playlist${num}`}>playlist ID</label>\n        <input\n          type=\"text\"\n          name={`playlist${num}`}\n          id={`playlist${num}`}\n          className=\"playlist-id\"\n          data-lpignore=\"true\"\n          required\n          placeholder=\"spotify:playlist:37i9dQZF1DZ06evO05tE88\"\n          value={array[0]}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"number\"\n          className=\"percentage\"\n          id={`percent${num}`}\n          name={`percent${num}`}\n          value={array[1]}\n          min=\"1\"\n          max=\"100\"\n          step=\"1\"\n          onChange={handleInputChange}\n        />\n        <label htmlFor={`percent${num}`}>%</label>\n        <button\n          type=\"button\"\n          className={`add-entry-button ${!isLast ? \"visually-hidden\" : \"\"}`}\n          id={`add-entry-button-${num}`}\n          value={num}\n          onClick={addFormLine}\n        >\n          add more\n        </button>\n\n        {!isOnly && (\n          <button\n            type=\"button\"\n            className=\"remove-entry-button\"\n            id={`remove-entry-button-${num}`}\n            value={num}\n            onClick={removeFormLine}\n          >\n            remove this\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}