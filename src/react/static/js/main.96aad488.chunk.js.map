{"version":3,"sources":["helpers/ErrorBoundary.js","App.js","helpers/handleLookup.js","helpers/renderFormLine.js","helpers/makePrevPlaylists.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","props","state","error","errorInfo","this","setState","style","whiteSpace","toString","componentStack","href","children","React","Component","App","useState","numberOfTracks","setNumberOfTracks","submission","setSubmission","playlists","compositions","prevs","setPrevs","globalError","setGlobalError","isCreating","setIsCreating","useEffect","fetch","then","x","json","catch","e","window","location","replace","displayError","msg","setTimeout","handleInputChange","target","name","value","match","num","newSub","str","method","headers","body","JSON","stringify","r","handleLookup","addFormLine","push","removeFormLine","filter","_","index","Number","calcTotal","reduce","acc","curr","className","id","map","array","isLast","isOnly","key","htmlFor","type","data-lpignore","required","placeholder","onChange","min","max","step","onClick","renderFormLine","length","preventDefault","s","includes","arrayOfArrays","listId","timestamp","url","URL","origin","console","log","disabled","xmlns","width","height","viewBox","fill","d","populateForm","composition","parse","dataset","tracks","comp","playlistId","percentage","playlistName","scrollTo","top","left","behavior","deletePlaylist","idToDelete","status","reload","alert","pL","timestring","split","Date","image","images","displayDate","toLocaleTimeString","toLocaleDateString","weekday","year","month","day","undefined","compositionData","src","alt","compo","data-composition","data-tracks","er","makePrevPlaylists","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.96aad488.chunk.js","sourcesContent":["import React from \"react\";\n\n// lifted straight from Dan A.\n// https://codepen.io/gaearon/pen/wqvxGa?editors=0010\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n          <p>\n            Try logging in again. If there's a \"blank\" radio-nachos playlist in\n            your Spotify, delete it.\n          </p>\n          <a href=\"/\">Go back.</a>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { useEffect, useState } from \"react\";\n\nimport renderFormLine from \"./helpers/renderFormLine\";\nimport makePrevPlaylists from \"./helpers/makePrevPlaylists\";\nimport handleLookup from \"./helpers/handleLookup\";\nimport ErrorBoundary from \"./helpers/ErrorBoundary\";\n\nconst spinner = () => (\n  <svg\n    id=\"spinner\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"#ffffff\"\n  >\n    <path d=\"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\" />\n  </svg>\n);\n\nfunction App() {\n  const [numberOfTracks, setNumberOfTracks] = useState(20);\n  const [submission, setSubmission] = useState([[\"\", 100, \"\"]]); // id, %age, name (generated by func)\n  const [prevs, setPrevs] = useState({ playlists: [], compositions: [] });\n  const [globalError, setGlobalError] = useState(\"\");\n  const [isCreating, setIsCreating] = useState(false);\n\n  useEffect(() => {\n    fetch(\"/getPrev\")\n      .then((x) => x.json())\n      .then((json) => setPrevs(json))\n      .catch((e) => {\n        window.location.replace(\"/\");\n      });\n  }, []);\n\n  const displayError = (msg) => {\n    setIsCreating(false);\n    setTimeout(() => setGlobalError(\"\"), 7000);\n    return setGlobalError(msg);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"tracks\") setNumberOfTracks(value);\n    if (name.match(/^playlist/)) {\n      const num = name.replace(\"playlist\", \"\").toString();\n      const newSub = [...submission];\n      newSub[num][0] = value;\n      // setSubmission(newSub);\n      if (value.match(/^spotify:playlist:[a-zA-Z0-9]{22}$/)) {\n        handleLookup(value, num, submission, setSubmission, displayError);\n      } else {\n        newSub[num][2] = \"\";\n        setSubmission(newSub);\n      }\n      return;\n    }\n    if (name.match(/^percent/)) {\n      const num = name.replace(\"percent\", \"\").toString();\n      const newSub = [...submission];\n      newSub[num][1] = value;\n      setSubmission(newSub);\n    }\n  };\n  const addFormLine = (e) => {\n    const newSub = [...submission];\n    newSub.push([\"\", 0]);\n    setSubmission(newSub);\n  };\n  const removeFormLine = (e) => {\n    const newSub = submission.filter(\n      (_, index) => index !== Number(e.target.value)\n    );\n    setSubmission(newSub);\n  };\n\n  const calcTotal = (submission) =>\n    submission.reduce((acc, curr) => acc + Number(curr[1]), 0);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsCreating(true);\n    if (calcTotal(submission) !== 100) {\n      return displayError(\"C'mon. That's not 100%, Brad.\");\n    }\n    const sizes = submission.filter((s) => s.length !== 3);\n    if (sizes.length > 0) return displayError(\"You missed a playlist, there.\");\n    const allPlaylistNames = submission.map((s) => s[2]);\n    if (allPlaylistNames.includes(\"\"))\n      return displayError(\"Missing a valid playlist there?\");\n\n    fetch(\"/make\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        arrayOfArrays: submission,\n        numberOfTracks,\n      }),\n    })\n      .then((r) => r.json())\n      .then((json) => {\n        const { listId, timestamp, error } = json;\n        if (error) {\n          return displayError(error);\n        }\n        const url = new URL(window.location.href);\n        return (window.location.href = `${url.origin}/radio?listId=${listId}&timestamp=${timestamp}`);\n      })\n      .catch((e) => {\n        console.log(e);\n        return displayError(\"Serious failure; sorry.\");\n      });\n  };\n\n  return (\n    <ErrorBoundary>\n      <div className=\"App\">\n        <h1>radio nachos playmaker</h1>\n        <form id=\"creator-form\">\n          <fieldset id=\"fieldset\">\n            <div id=\"all-entries\">\n              {submission.map((array, index) =>\n                renderFormLine(\n                  index,\n                  array,\n                  handleInputChange,\n                  addFormLine,\n                  removeFormLine,\n                  index === submission.length - 1,\n                  submission.length === 1\n                )\n              )}\n            </div>\n            <p id=\"total\">{calcTotal(submission)}</p>\n            <p id=\"currentVal\">{numberOfTracks}</p>\n\n            <label htmlFor=\"tracks\">how many tracks? (10 - 99)</label>\n            <br />\n            <input\n              type=\"range\"\n              id=\"tracks-input\"\n              name=\"tracks\"\n              value={numberOfTracks}\n              min=\"10\"\n              max=\"99\"\n              step=\"1\"\n              onChange={handleInputChange}\n            />\n            <br />\n            <div id=\"count-and-button\">\n              <span id=\"global-error\">{globalError}</span>\n              <button\n                id=\"submit-btn\"\n                type=\"submit\"\n                onClick={handleSubmit}\n                disabled={isCreating}\n              >\n                {isCreating ? <span>{spinner()}</span> : \"create playlist\"}\n              </button>\n            </div>\n          </fieldset>\n        </form>\n\n        <h2>Previous playlists</h2>\n        <ul id=\"previous\">\n          {!prevs.playlists.length && (\n            <li>\n              <p id=\"nope\">you have no previous playlists</p>\n            </li>\n          )}\n          {makePrevPlaylists(prevs, setSubmission, setNumberOfTracks)}\n        </ul>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","export default (str, num, submission, setSubmission, displayError) => {\n  fetch(\"/playlistlookup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ str }),\n  })\n    .then((r) => r.json())\n    .then(({ error, name }) => {\n      displayError(error);\n      const newSub = [...submission];\n      newSub[num][2] = name ? name : \"\";\n      return setSubmission(newSub);\n    })\n    .catch((e) => displayError(\"Lookup failed. Are you logged in?\"));\n};\n","import React from \"react\";\n\nexport default function (\n  num,\n  array,\n  handleInputChange,\n  addFormLine,\n  removeFormLine,\n  isLast = false,\n  isOnly = true\n) {\n  // console.log(num, array);\n  return (\n    <div key={num}>\n      <div className=\"above-entry-wrap\">\n        <p className=\"label-spacer\"></p>\n        <p className=\"playlist-name-lookup\" id=\"playlist1-name-lookup\">\n          {array[2]}\n        </p>\n      </div>\n      <div className=\"one-entry-wrap\">\n        <label htmlFor={`playlist${num}`}>playlist ID</label>\n        <input\n          type=\"text\"\n          name={`playlist${num}`}\n          id={`playlist${num}`}\n          className=\"playlist-id\"\n          data-lpignore=\"true\"\n          required\n          placeholder=\"spotify:playlist:37i9dQZF1DZ06evO05tE88\"\n          value={array[0]}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"number\"\n          className=\"percentage\"\n          id={`percent${num}`}\n          name={`percent${num}`}\n          value={array[1]}\n          min=\"1\"\n          max=\"100\"\n          step=\"1\"\n          onChange={handleInputChange}\n        />\n        <label htmlFor={`percent${num}`}>%</label>\n        <button\n          type=\"button\"\n          className={`add-entry-button ${!isLast ? \"visually-hidden\" : \"\"}`}\n          id={`add-entry-button-${num}`}\n          value={num}\n          onClick={addFormLine}\n        >\n          add more\n        </button>\n\n        {!isOnly && (\n          <button\n            type=\"button\"\n            className=\"remove-entry-button\"\n            id={`remove-entry-button-${num}`}\n            value={num}\n            onClick={removeFormLine}\n          >\n            remove this\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default (prevs, setSubmission, setNumberOfTracks) => {\n  const populateForm = (e) => {\n    const composition = JSON.parse(e.target.dataset.composition);\n    const { tracks } = e.target.dataset;\n    const newSub = composition.map((comp) => [\n      comp.playlistId,\n      comp.percentage,\n      comp.playlistName,\n    ]);\n    setSubmission(newSub);\n    setNumberOfTracks(tracks);\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n  const deletePlaylist = (e) => {\n    const { id } = e.target;\n    const idToDelete = id.replace(\"playlist-\", \"\");\n    fetch(\"/deletePlaylist\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ idToDelete }),\n    })\n      .then((r) => {\n        if (r.status === 200) {\n          window.location.reload();\n        } else {\n          alert(`Something went wrong. Server status: ${r.status}`);\n        }\n      })\n      .catch((e) => {\n        alert(`Something went wrong. ${JSON.stringify(e)}`);\n      });\n  };\n\n  try {\n    const { playlists, compositions } = prevs;\n    return playlists.map((pL) => {\n      const { id } = pL;\n      const timestring = +pL.name.split(\"-\")[2]; // the part after radio-nachos-\n      const timestamp = new Date(timestring);\n      let image = \"https://www.porknachos.com/files/naviavi.jpg\";\n      if (pL.images && pL.images.length > 1) {\n        image = pL.images[1].url;\n      }\n\n      const composition = compositions.filter(\n        (comp) => comp.timestamp === timestring.toString()\n      )[0];\n      const options = {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      };\n      const displayDate = `${timestamp.toLocaleTimeString()}, ${timestamp.toLocaleDateString(\n        \"en-US\",\n        options\n      )}`;\n      if (composition !== undefined) {\n        const { compositionData, numberOfTracks } = composition;\n        if (!numberOfTracks || numberOfTracks < 1) {\n          return (\n            <li key={id} className=\"playlist-entry-wrap\">\n              <a href={`/radio?timestamp=${timestring}&listId=${id}`}>\n                <img src={image} alt=\"playlist graphic from spotify\" />\n                <p>An empty playlist</p>\n              </a>\n              <div className=\"playlist-buttons\">\n                <div>&nbsp;</div>\n                <button\n                  onClick={deletePlaylist}\n                  className=\"delete-playlist-btn\"\n                  id={`playlist-${id}`}\n                >\n                  delete this playlist\n                </button>\n              </div>\n              `\n            </li>\n          );\n        }\n        return (\n          <li key={id} className=\"playlist-entry-wrap\">\n            <a href={`/radio?timestamp=${timestring}&listId=${id}`}>\n              <img src={image} alt=\"playlist graphic from spotify\" />\n              <p>\n                {displayDate} - {numberOfTracks} songs\n              </p>\n            </a>\n            {compositionData.map((compo) => (\n              <p key={compo.playlistId} className=\"one-playlist-line\">\n                {compo.playlistName} ({compo.playlistId})\n                <span>{compo.percentage}%</span>\n              </p>\n            ))}\n            <div className=\"playlist-buttons\">\n              <button\n                className=\"make-another-btn\"\n                data-composition={JSON.stringify(compositionData)}\n                data-tracks={numberOfTracks}\n                onClick={populateForm}\n              >\n                Set up a similar playlist\n              </button>\n              <button\n                onClick={deletePlaylist}\n                className=\"delete-playlist-btn\"\n                id={`playlist-${id}`}\n              >\n                delete this playlist\n              </button>\n            </div>\n            `\n          </li>\n        );\n      } else {\n        return (\n          <li className=\"playlist-entry-wrap\">\n            <a href={`/radio?timestamp=${timestring}&listId=${id}`}>\n              <img\n                src={`${pL.images[1].url}`}\n                alt=\"playlist graphic from spotify\"\n              />\n              <p>${displayDate}</p>\n            </a>\n          </li>\n        );\n      }\n    });\n  } catch (er) {\n    console.log(er, \"error mapping playlists\");\n    return (\n      <p>\n        Something failed catastrophically. If you have a blank radio-nachos\n        playlist in your Spotify account, delete it and reload. Otherwise,\n        <a href=\"/\">try logging in again.</a> You might need to message me.\n      </p>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}